/* C10 MARZO */
/**************************************** CONSTRUCCIÓN DEL SCORE DE CRÉDITO ****************************************/

/* UNIR LAS TABLAS DE INSUMO REGRESION DE LAS VARIABLES SELECCIONADAS */
PROC SQL;
CREATE TABLE ORIGINA.INSUMO_REGRESION AS
SELECT 	M.CLIENTE,
		M.R_MONTO_SOLICITADO,
		N.R_NIVEL_ESTUDIOS,
		E.R_EDAD,
		B.R_BC_SCORE,
		I.R_INGRESO_TOTAL,
		P.R_MUNICIPIO,
		F.BAD
FROM ORIGINA.R_MONTO_SOLICITADO    AS M 
LEFT JOIN ORIGINA.FLAG_G_B         AS F ON M.CLIENTE=F.CLIENTE
LEFT JOIN ORIGINA.R_NIVEL_ESTUDIOS AS N ON M.CLIENTE=N.CLIENTE
LEFT JOIN ORIGINA.R_EDAD           AS E ON M.CLIENTE=E.CLIENTE
LEFT JOIN ORIGINA.R_BC_SCORE       AS B ON M.CLIENTE=B.CLIENTE
LEFT JOIN ORIGINA.R_INGRESO_TOTAL  AS I ON M.CLIENTE=I.CLIENTE
LEFT JOIN ORIGINA.R_MUNICIPIO      AS P ON M.CLIENTE=P.CLIENTE
;QUIT;


/* REGRESION LOGISTICA */ 									/* MODELAREMOS LA PROBABILIDAD DEL EVENTO '0' DE LA COLUMNA BAD */
PROC LOGISTIC DATA=ORIGINA.INSUMO_REGRESION;		        /* Por defecto, SAS modela la probabilidad de que la variable dependiente sea igual al valor más bajo (orden alfanumérico o numérico). En regresión logística binaria (ej. 0 y 1), sin DESCENDING, SAS predeciría la probabilidad de 0 (el evento "no éxito"). Con PROC LOGISTIC DATA=ORIGINA.INSUMO_REGRESION DESCENDING; le indicas a SAS que modeles la probabilidad del evento de interés (generalmente 1 o el valor más alto). También puedes lograr lo mismo usando la instrucción MODEL BAD(EVENT='1')=R_MONTO_SOLICITADO R_NIVEL_ESTUDIOS R_EDAD; */
MODEL BAD=R_MONTO_SOLICITADO R_NIVEL_ESTUDIOS R_EDAD R_BC_SCORE R_INGRESO_TOTAL	R_MUNICIPIO	/* SLSTAY := SIGNIFICANCIA MINIMA PARA QUE UNA VARIABLE PERMANEZCA EN AL MODELO.*/
/SELECTION=BACKWARD SLENTRY=0.1 SLSTAY=0.1;					/* SLENTRY:= SIGNIFICANCIA MINIMA PARA QUE UNA VARIABLE ENTRE AL MODELO.*/
RUN; 

/* CONSTRUCCION DEL SCORE EN SAS */
/* UNA VEZ CALCULADOS EL OFFSET Y PDO EN EXCEL, PODEMOS CALCULAR EL SCORE EN SAS */
PROC SQL;
CREATE TABLE ORIGINA.SCORE AS 
SELECT 	CLIENTE,
		R_MONTO_SOLICITADO,
		R_EDAD,
		R_BC_SCORE,
		BAD,
		349+(59/LOG(2))*(7.5594 -27.9245*R_MONTO_SOLICITADO -17.7344*R_EDAD -16.6704*R_BC_SCORE -15.5256*R_MUNICIPIO) AS SCORE
FROM ORIGINA.INSUMO_REGRESION AS A
;QUIT;

/* CREAR RANGOS POR CADA DECIL LA VARIABLE SCORE */
PROC UNIVARIATE DATA=ORIGINA.SCORE NOPRINT;
VAR SCORE;
OUTPUT PCTLPRE=P_ PCTLPTS = 0 TO 100 BY 10;
RUN;

/* REPORTE DE PREDICTIBILIDAD DEL MODELO */
PROC SQL;
CREATE TABLE ORIGINA.REPORTE_SCORE AS
SELECT 	RANGO_SCORE,
		COUNT(CLIENTE) AS CLIENTES,
		SUM(BAD) AS BADS,
		SUM(BAD)/COUNT(CLIENTE) AS POR_BADS
FROM
(
SELECT 	CLIENTE,
		SCORE,
		CASE 
			WHEN SCORE >= 399          AND SCORE < 533.55470107 THEN ' 01 399.72412688 - 533.55470107'
			WHEN SCORE >= 533.55470107 AND SCORE < 550.83153624 THEN ' 02 533.55470107 - 550.83153624'
			WHEN SCORE >= 550.83153624 AND SCORE < 574.30945823 THEN ' 03 550.83153624 - 574.30945823'
			WHEN SCORE >= 574.30945823 AND SCORE < 590.02298166 THEN ' 04 574.30945823 - 590.02298166'
			WHEN SCORE >= 590.02298166 AND SCORE < 599.48583238 THEN ' 05 590.02298166 - 599.48583238'
			WHEN SCORE >= 599.48583238 AND SCORE < 617.78861802 THEN ' 05 599.48583238 - 617.78861802'
			WHEN SCORE >= 617.78861802 AND SCORE < 632.93286504 THEN ' 06 617.78861802 - 632.93286504'
			WHEN SCORE >= 632.93286504 AND SCORE < 652.08078119 THEN ' 07 632.93286504 - 652.08078119'
			WHEN SCORE >= 652.08078119 AND SCORE < 676.67916497 THEN ' 08 652.08078119 - 676.67916497'
			WHEN SCORE >= 676.67916497 							THEN ' 09 676.67916497 - MAS'
		END AS RANGO_SCORE,
		BAD
FROM ORIGINA.SCORE AS S
) AS Z
GROUP BY 1
;QUIT;
